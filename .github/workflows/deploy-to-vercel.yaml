name: CI/CD

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on: push

jobs:
  Call-Tests-Workflow:
    uses: ./.github/workflows/tests.yaml

  Deploy-Type:
    runs-on: ubuntu-latest
    steps:
      - name: Set env DEPLOY
        run: |
          if [[ $GITHUB_EVENT_NAME == 'push']]; then
            echo "DEPLOY=true" 
          else
            echo "DEPLOY=false"
          fi

  Check-Dependabot:
    runs-on: ubuntu-latest
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs: Call-Tests-Workflow
    steps:
      - run: echo "PR created by Dependabot"

  Deploy-Preview:
    if: github.ref_name != 'main' && env.DEPLOY == true
    runs-on: ubuntu-latest
    needs: Call-Tests-Workflow
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Production:
    if: github.ref_name == 'main' && env.DEPLOY == true
    runs-on: ubuntu-latest
    needs: Call-Tests-Workflow
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
